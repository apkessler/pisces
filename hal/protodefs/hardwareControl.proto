// -*- Protocol-Buffers -*-
// ==================================================================================================
//
//
// =================================================================================================
// @file hardwareControl.proto
// @brief Service definitions for gRPC
// @author Andrew Kessler <andrewkessler6@gmail.com>

syntax = "proto3";
import "google/protobuf/timestamp.proto";


package hardwarecontrol;

service HardwareControl {

    rpc Echo (EchoRequest) returns (EchoResponse) {}
    rpc SetRelayState (RelayState) returns (Empty) {}
    rpc GetRelayStates (Empty) returns (RelayStates) {}

    rpc GetTemperature (Empty) returns (Temperature) {}

    //Should these be in a different service?
    rpc SetLightState(LightState) returns (Empty) {}
    rpc GetLightStates(Empty) returns (LightStates) {}

    rpc GetPH(Empty) returns (pH) {}

    rpc MoveStepper(StepperCommand) returns (Empty) {}

    rpc SetScope(Scope) returns (Empty) {}

}

message Empty {

}

message EchoRequest {
    string payload =1;
}

message EchoResponse {
    string payback = 1;
}

message RelayState {
    uint32 channel = 1;
    bool isEngaged = 2;
}

message RelayStates {
    repeated RelayState states = 1;
}

message Temperature {
    float temperature_degC = 1;
}

enum LightStateEnum {
    LightState_Off = 0;
    LightState_Day = 1;
    LightState_Night = 2;
}

message LightState {
    uint32 lightId = 1; //Which light is being addressed
    LightStateEnum  state = 2;
    string scope = 3;
}

message LightStates {
    repeated LightState states = 1;
}

message pH {
    float pH = 1;
}

message StepperCommand {
    uint32 numSteps = 1;
    bool isReverse = 2;
}

message Scope {
    string scope = 1;
}